{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,ECCA,IAAM,EAA8B,KAElC,IAAM,EAAmB,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,iBAGnD,EAAW,SAAS,aAAa,CAAC,cAGxC,GAAI,GAEF,GAAI,EAAkB,CAEpB,IAAM,EAAe,EAAS,aAAa,CAAC,mBACtC,EAAY,EAAS,aAAa,CAAC,eACnC,EAAY,EAAS,aAAa,CAAC,eACnC,EAAW,EAAS,aAAa,CAAC,cAClC,EAAa,EAAS,aAAa,CAAC,eAE1C,CAAA,EAAa,GAAG,CAAG,EAAiB,UAAU,CAC9C,EAAa,GAAG,CAAG,EAAiB,KAAK,CACzC,EAAU,WAAW,CAAG,EAAiB,KAAK,CAC9C,EAAU,WAAW,CAAG,EAAiB,KAAK,CAC9C,EAAS,WAAW,CAAG,EAAiB,IAAI,CAC5C,EAAW,WAAW,CAAG,EAAiB,MAAM,AAClD,MAEE,QAAQ,IAAI,CAAC,+CAGf,QAAQ,IAAI,CAAC,+BAEjB,EAiBA,SAAS,IAEP,aAAa,UAAU,CAAC,gBAGxB,IAAM,EAAW,SAAS,aAAa,CAAC,cAGpC,GAEF,EAAS,MAAM,GAEf,EAAuB,CAAA,IAEvB,QAAQ,IAAI,CAAC,4CAEjB,CAGA,SAAS,EAAuB,CAAW,EAEzC,IAAM,EAAW,SAAS,aAAa,CAAC,cAGlC,EAAe,SAAS,aAAa,CAAC,iBAG5C,GAAI,EAEE,GACF,EAAa,MAAM,QAIrB,GAAI,CAAC,GAAgB,EAAa,CAChC,IAAM,EAAa,SAAS,aAAa,CAAC,MAC1C,CAAA,EAAW,SAAS,CAAG,eACvB,EAAW,WAAW,CAAG,2DACzB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,CAEJ,CAvDA,SAAS,gBAAgB,CAAC,mBAAoB,KAE5C,IAEA,EAAuB,CAAA,EACzB,GAIA,AADsB,SAAS,gBAAgB,CAAC,kBAClC,OAAO,CAAC,AAAA,IACpB,EAAO,gBAAgB,CAAC,QAAS,EACnC,E,G,E","sources":["<anon>","src/js/shoppingList.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire0688\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire0688\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"iIDod\", function(module, exports) {\n// Funkcja wyświetlająca dane z local storage na karcie\nconst $da0ae3fd02601188$var$displayBookFromLocalStorage = ()=>{\n    // Pobierz dane z local storage\n    const selectedBookData = JSON.parse(localStorage.getItem(\"selectedBook\"));\n    // Pobierz referencję do diva .book-card\n    const bookCard = document.querySelector(\".book-card\");\n    // Sprawdź, czy div .book-card istnieje\n    if (bookCard) {\n        // Sprawdź, czy są dane w local storage\n        if (selectedBookData) {\n            // Zaktualizuj treść elementów w .book-card\n            const booksCardImg = bookCard.querySelector(\".books-card-img\");\n            const bookTitle = bookCard.querySelector(\".book-title\");\n            const bookGenre = bookCard.querySelector(\".book-genre\");\n            const bookPlot = bookCard.querySelector(\".book-plot\");\n            const bookAuthor = bookCard.querySelector(\".book-author\");\n            booksCardImg.src = selectedBookData.book_image;\n            booksCardImg.alt = selectedBookData.title;\n            bookTitle.textContent = selectedBookData.title;\n            bookGenre.textContent = selectedBookData.genre;\n            bookPlot.textContent = selectedBookData.plot;\n            bookAuthor.textContent = selectedBookData.author;\n        } else // Jeśli brak danych w local storage, wyświetl komunikat\n        console.warn(\"Brak danych o ksi\\u0105\\u017Cce w local storage.\");\n    } else console.warn(\"Div .book-card nie istnieje.\");\n};\n// Pobierz i wyświetl dane z local storage po załadowaniu strony\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    // Wyświetl dane na karcie\n    $da0ae3fd02601188$var$displayBookFromLocalStorage();\n    // Sprawdź stan kart, ale nie pokazuj komunikatu\n    $da0ae3fd02601188$var$checkBookCardExistence(false);\n});\n// Pobierz wszystkie przyciski .button-delete i dodaj nasłuchiwanie na kliknięcie\nconst $da0ae3fd02601188$var$deleteButtons = document.querySelectorAll(\".button-delete\");\n$da0ae3fd02601188$var$deleteButtons.forEach((button)=>{\n    button.addEventListener(\"click\", $da0ae3fd02601188$var$deleteBookCard);\n});\n// Funkcja obsługująca kliknięcie przycisku usuwania\nfunction $da0ae3fd02601188$var$deleteBookCard() {\n    // Usuń dane z local storage\n    localStorage.removeItem(\"selectedBook\");\n    // Pobierz referencję do diva .book-card\n    const bookCard = document.querySelector(\".book-card\");\n    // Sprawdź, czy div .book-card istnieje\n    if (bookCard) {\n        // Usuń div .book-card\n        bookCard.remove();\n        // Po usunięciu karty, sprawdź stan kart\n        $da0ae3fd02601188$var$checkBookCardExistence(true); // Przekazujemy wartość true, aby pokazać komunikat\n    } else console.warn(\"Div .book-card do usuni\\u0119cia nie istnieje.\");\n}\n// Funkcja sprawdzająca czy karta książki istnieje\nfunction $da0ae3fd02601188$var$checkBookCardExistence(showMessage) {\n    // Pobierz referencję do diva .book-card\n    const bookCard = document.querySelector(\".book-card\");\n    // Pobierz referencję do diva, który zawiera komunikat\n    const emptyMessage = document.querySelector(\".book-message\");\n    // Sprawdź, czy div .book-card istnieje\n    if (bookCard) // Sprawdź, czy komunikat istnieje i usuń go\n    {\n        if (emptyMessage) emptyMessage.remove();\n    } else // Sprawdź, czy komunikat nie istnieje i dodaj go\n    if (!emptyMessage && showMessage) {\n        const messageDiv = document.createElement(\"div\");\n        messageDiv.className = \"book-message\";\n        messageDiv.textContent = \"This page is empty, add some books and proceed to order.\";\n        document.body.appendChild(messageDiv);\n    }\n}\n\n});\n\n\nparcelRequire(\"iIDod\");\n\n//# sourceMappingURL=shopping-list.b58986bb.js.map\n","// Funkcja wyświetlająca dane z local storage na karcie\nconst displayBookFromLocalStorage = () => {\n  // Pobierz dane z local storage\n  const selectedBookData = JSON.parse(localStorage.getItem('selectedBook'));\n\n  // Pobierz referencję do diva .book-card\n  const bookCard = document.querySelector('.book-card');\n\n  // Sprawdź, czy div .book-card istnieje\n  if (bookCard) {\n    // Sprawdź, czy są dane w local storage\n    if (selectedBookData) {\n      // Zaktualizuj treść elementów w .book-card\n      const booksCardImg = bookCard.querySelector('.books-card-img');\n      const bookTitle = bookCard.querySelector('.book-title');\n      const bookGenre = bookCard.querySelector('.book-genre');\n      const bookPlot = bookCard.querySelector('.book-plot');\n      const bookAuthor = bookCard.querySelector('.book-author');\n\n      booksCardImg.src = selectedBookData.book_image;\n      booksCardImg.alt = selectedBookData.title;\n      bookTitle.textContent = selectedBookData.title;\n      bookGenre.textContent = selectedBookData.genre;\n      bookPlot.textContent = selectedBookData.plot;\n      bookAuthor.textContent = selectedBookData.author;\n    } else {\n      // Jeśli brak danych w local storage, wyświetl komunikat\n      console.warn('Brak danych o książce w local storage.');\n    }\n  } else {\n    console.warn('Div .book-card nie istnieje.');\n  }\n};\n\n// Pobierz i wyświetl dane z local storage po załadowaniu strony\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Wyświetl dane na karcie\n  displayBookFromLocalStorage();\n  // Sprawdź stan kart, ale nie pokazuj komunikatu\n  checkBookCardExistence(false);\n});\n\n// Pobierz wszystkie przyciski .button-delete i dodaj nasłuchiwanie na kliknięcie\nconst deleteButtons = document.querySelectorAll('.button-delete');\ndeleteButtons.forEach(button => {\n  button.addEventListener('click', deleteBookCard);\n});\n\n// Funkcja obsługująca kliknięcie przycisku usuwania\nfunction deleteBookCard() {\n  // Usuń dane z local storage\n  localStorage.removeItem('selectedBook');\n\n  // Pobierz referencję do diva .book-card\n  const bookCard = document.querySelector('.book-card');\n\n  // Sprawdź, czy div .book-card istnieje\n  if (bookCard) {\n    // Usuń div .book-card\n    bookCard.remove();\n    // Po usunięciu karty, sprawdź stan kart\n    checkBookCardExistence(true); // Przekazujemy wartość true, aby pokazać komunikat\n  } else {\n    console.warn('Div .book-card do usunięcia nie istnieje.');\n  }\n}\n\n// Funkcja sprawdzająca czy karta książki istnieje\nfunction checkBookCardExistence(showMessage) {\n  // Pobierz referencję do diva .book-card\n  const bookCard = document.querySelector('.book-card');\n\n  // Pobierz referencję do diva, który zawiera komunikat\n  const emptyMessage = document.querySelector('.book-message');\n\n  // Sprawdź, czy div .book-card istnieje\n  if (bookCard) {\n    // Sprawdź, czy komunikat istnieje i usuń go\n    if (emptyMessage) {\n      emptyMessage.remove();\n    }\n  } else {\n    // Sprawdź, czy komunikat nie istnieje i dodaj go\n    if (!emptyMessage && showMessage) {\n      const messageDiv = document.createElement('div');\n      messageDiv.className = 'book-message';\n      messageDiv.textContent = 'This page is empty, add some books and proceed to order.';\n      document.body.appendChild(messageDiv);\n    }\n  }\n}\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$da0ae3fd02601188$var$displayBookFromLocalStorage","selectedBookData","JSON","parse","localStorage","getItem","bookCard","document","querySelector","booksCardImg","bookTitle","bookGenre","bookPlot","bookAuthor","src","book_image","alt","title","textContent","genre","plot","author","console","warn","$da0ae3fd02601188$var$deleteBookCard","removeItem","remove","$da0ae3fd02601188$var$checkBookCardExistence","showMessage","emptyMessage","messageDiv","createElement","className","body","appendChild","addEventListener","$da0ae3fd02601188$var$deleteButtons","querySelectorAll","forEach","button"],"version":3,"file":"shopping-list.b58986bb.js.map"}