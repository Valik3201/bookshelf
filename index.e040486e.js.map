{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,O,c,C,E,O,C,W,C,I,I,E,I,A,G,E,E,W,C,E,a,C,C,GCEA,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,G,E,Q,S,C,C,C,ECVA,EAAA,OAAA,CAAiB,IAAA,IAAoB,uCAAA,YAAA,GAAA,EAAwC,QAAQ,E,G,E,Q,S,C,C,C,ECArF,EAAA,OAAA,CAAiB,IAAA,IAAoB,4CAAA,YAAA,GAAA,EAA6C,QAAQ,E,G,E,Q,S,C,C,C,ECA1F,EAAA,OAAA,CAAiB,IAAA,IAAoB,4CAAA,YAAA,GAAA,EAA6C,QAAQ,E,GCA1F,AAAA,EAAA,SAAA,QAAA,CAA8C,IAAA,IAAoB,GAAA,YAAA,GAAA,EAAI,QAAQ,GAAG,KAAK,KAAK,CAAC,4T,E,SEArF,MAAM,EAAoB,SAAS,aAAa,CAAC,8BAC3C,EAAiB,SAAS,aAAa,CAAC,6BAExC,EAAa,AAAA,IACpB,AAAS,aAAT,GACF,EAAkB,SAAS,CAAC,GAAG,CAAC,WAChC,EAAkB,SAAS,CAAC,MAAM,CAAC,QAAS,UAC5C,EAAe,SAAS,CAAC,MAAM,CAAC,WAChC,EAAe,SAAS,CAAC,GAAG,CAAC,OAAQ,WACnB,aAAT,IACT,EAAe,SAAS,CAAC,GAAG,CAAC,WAC7B,EAAe,SAAS,CAAC,MAAM,CAAC,OAAQ,UACxC,EAAkB,SAAS,CAAC,MAAM,CAAC,WACnC,EAAkB,SAAS,CAAC,GAAG,CAAC,QAAS,UAE7C,E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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-e1919e639c730e4c.js","node_modules/@parcel/runtime-js/lib/runtime-16cfbbc3c4f72df9.js","node_modules/@parcel/runtime-js/lib/runtime-2e4564417994bfe5.js","node_modules/@parcel/runtime-js/lib/runtime-7421d29d38b63108.js","src/js/indexModules.js","src/js/viewSwitcher.js","src/js/fetchCategories.js","src/js/fetchBooks.js","src/js/fetchBookById.js","src/js/modalHandler.js","src/js/handleBookAddition.js","src/js/fetchBooksByCategories.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire0688\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire0688\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"ifJdc\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $d49cb2d7b03f6a77$export$6503ec6e8aabbaf, (v) => $d49cb2d7b03f6a77$export$6503ec6e8aabbaf = v);\nvar $d49cb2d7b03f6a77$export$6503ec6e8aabbaf;\nvar $d49cb2d7b03f6a77$export$f7ad0328861e2f03;\n\"use strict\";\nvar $d49cb2d7b03f6a77$var$mapping = new Map();\nfunction $d49cb2d7b03f6a77$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$d49cb2d7b03f6a77$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $d49cb2d7b03f6a77$var$resolve(id) {\n    var resolved = $d49cb2d7b03f6a77$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$d49cb2d7b03f6a77$export$6503ec6e8aabbaf = $d49cb2d7b03f6a77$var$register;\n$d49cb2d7b03f6a77$export$f7ad0328861e2f03 = $d49cb2d7b03f6a77$var$resolve;\n\n});\n\nparcelRegister(\"jaNa7\", function(module, exports) {\nmodule.exports = new URL(\"amazon.702e28b6.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"4g0bO\", function(module, exports) {\nmodule.exports = new URL(\"apple-books.75f7682c.png\", import.meta.url).toString();\n\n});\n\nparcelRegister(\"cGAW0\", function(module, exports) {\nmodule.exports = new URL(\"placeholder.18062ded.jpg\", import.meta.url).toString();\n\n});\n\nvar $fbaf49ea4bf22933$exports = {};\n\n(parcelRequire(\"ifJdc\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"lbZNw\",\"index.e040486e.js\",\"9zlPt\",\"placeholder.18062ded.jpg\",\"i6YUf\",\"amazon.702e28b6.png\",\"jHlqi\",\"apple-books.75f7682c.png\",\"5TVzx\",\"shopping-list.a19dbaa9.js\",\"8BfbS\",\"shopping-list.runtime.0c78f469.js\"]'));\n\nparcelRequire(\"dyvSB\");\nconst $4adbe6aee592a725$export$c61ab8dbb8180937 = document.querySelector('[data-content=\"top-books\"]');\nconst $4adbe6aee592a725$export$278e8a5cfb9675fd = document.querySelector('[data-content=\"category\"]');\nconst $4adbe6aee592a725$export$adaf8a367aa41030 = (view)=>{\n    if (view === \"topBooks\") {\n        $4adbe6aee592a725$export$c61ab8dbb8180937.classList.add(\"visible\");\n        $4adbe6aee592a725$export$c61ab8dbb8180937.classList.remove(\"right\", \"hidden\");\n        $4adbe6aee592a725$export$278e8a5cfb9675fd.classList.remove(\"visible\");\n        $4adbe6aee592a725$export$278e8a5cfb9675fd.classList.add(\"left\", \"hidden\");\n    } else if (view === \"category\") {\n        $4adbe6aee592a725$export$278e8a5cfb9675fd.classList.add(\"visible\");\n        $4adbe6aee592a725$export$278e8a5cfb9675fd.classList.remove(\"left\", \"hidden\");\n        $4adbe6aee592a725$export$c61ab8dbb8180937.classList.remove(\"visible\");\n        $4adbe6aee592a725$export$c61ab8dbb8180937.classList.add(\"right\", \"hidden\");\n    }\n};\n\n\n\nvar $dyvSB = parcelRequire(\"dyvSB\");\n/**\n * Displays book categories in the specified HTML container.\n * Fetches book categories using the fetchBooks function and updates the DOM accordingly.\n *\n * @returns {void}\n */ const $77d713492c37f0bb$var$displayCategories = async ()=>{\n    // Select the HTML container for categories.\n    const categoriesContainer = document.querySelector(\".category-list\");\n    // Fetch book categories from the API.\n    const bookCategories = await (0, $dyvSB.fetchBooks)(\"category-list\");\n    // Sorting categories alphabetically.\n    bookCategories.sort((a, b)=>a.list_name.localeCompare(b.list_name));\n    // Create initial markup for \"All categories\" button.\n    let markup = `<div>\n          <button class=\"category-list__item active\" type=\"button\" name=\"All categories\">All categories</button>\n        </div>`;\n    // Append markup for each book category obtained from the API.\n    markup += bookCategories.map(({ list_name: list_name })=>{\n        return `<div>\n            <button class=\"category-list__item\" type=\"button\" name=\"${list_name}\">${list_name}</button>\n        </div>`;\n    }).join(\"\");\n    // Insert the generated markup into the categories container.\n    categoriesContainer.insertAdjacentHTML(\"beforeend\", markup);\n};\n// Call the displayCategories function to render book categories in the UI.\n$77d713492c37f0bb$var$displayCategories();\n\n\n\nvar $dyvSB = parcelRequire(\"dyvSB\");\n\nvar $dyvSB = parcelRequire(\"dyvSB\");\n/**\n * Element DOM reprezentujący kontener na treść wewnątrz wyskakującego okna modalnego.\n * @type {HTMLElement}\n */ const $d526d8dd8f743c2d$export$56c24f306bd986cf = document.querySelector(\".modal-pop-up-content\");\nconst $d526d8dd8f743c2d$export$313c6d35f75fc0e = (showModal)=>{\n    /**\n   * Element DOM reprezentujący tło wyskakującego okna modalnego.\n   * @type {HTMLElement}\n   */ const backdrop = document.querySelector(\".backdrop-pop-up\");\n    if (showModal) // Pokaż okno modalne, usuwając klasę 'is-hidden' z tła\n    backdrop.classList.remove(\"is-hidden\");\n    else // Ukryj okno modalne, dodając klasę 'is-hidden' do tła\n    backdrop.classList.add(\"is-hidden\");\n};\n/**\n * Element DOM reprezentujący tło wyskakującego okna modalnego.\n * @type {HTMLElement}\n */ const $d526d8dd8f743c2d$var$backdrop = document.querySelector(\".backdrop-pop-up\");\n/**\n * Słuchacz zdarzeń dla kliknięcia na tło modala. Zamyka modal.\n */ $d526d8dd8f743c2d$var$backdrop.addEventListener(\"click\", function(event) {\n    // Sprawdź czy kliknięcie nastąpiło w backdrop (nie w jego dzieci)\n    if (event.target === $d526d8dd8f743c2d$var$backdrop) // Zamykaj modal tylko jeśli kliknięcie nastąpiło bezpośrednio w backdrop\n    $d526d8dd8f743c2d$export$313c6d35f75fc0e(false);\n});\n/**\n * Element DOM reprezentujący przycisk zamykający wewnątrz modala.\n * @type {HTMLElement}\n */ const $d526d8dd8f743c2d$var$closeButton = document.querySelector(\".close-modal-button\");\n/**\n * Słuchacz zdarzeń dla kliknięcia na przycisk zamykający. Czyści zawartość modala i ukrywa go.\n */ $d526d8dd8f743c2d$var$closeButton.addEventListener(\"click\", function() {\n    // Wyczyść zawartość wewnątrz kontenera modala\n    $d526d8dd8f743c2d$export$56c24f306bd986cf.innerHTML = \"\";\n    // Ukryj modal\n    $d526d8dd8f743c2d$export$313c6d35f75fc0e(false);\n});\n//zamknięcie za pomocą klawiszy\ndocument.addEventListener(\"keydown\", function(event) {\n    if (event.key === \"Escape\") $d526d8dd8f743c2d$export$313c6d35f75fc0e(false);\n});\n\n\n\nvar $lthku = parcelRequire(\"lthku\");\n\nvar $46SdE = parcelRequire(\"46SdE\");\n\nvar $gwo96 = parcelRequire(\"gwo96\");\nconst $15e9813ff9aa67e8$export$b88da0071e018418 = ()=>{\n    // Adding event handling for the \"Add to Shopping List\" buttons\n    const addToShoppingListButtons = document.querySelectorAll(\".modal-pop-up-btn\");\n    (0, $46SdE.onAuthStateChanged)((0, $gwo96.auth), (user)=>{\n        if (user) addToShoppingListButtons.forEach(function(button) {\n            const bookId = button.getAttribute(\"data-book-id\");\n            // Checking if the book is already in localStorage\n            const isBookInLocalStorage = (0, $lthku.checkIfBookInLocalStorage)(bookId);\n            if (isBookInLocalStorage) {\n                // If the book is in localStorage, change the button text\n                button.textContent = \"Remove from the shopping list\";\n                // Add the congratulatory message\n                (0, $lthku.toggleCongratulatoryMessage)(true);\n            } else // If the book is not in localStorage, add it and change the button text\n            (0, $lthku.toggleCongratulatoryMessage)(false);\n            // Adding click event listener with  function\n            button.addEventListener(\"click\", function() {\n                // Checking if the book is already in localStorage\n                const isBookInLocalStorage = (0, $lthku.checkIfBookInLocalStorage)(bookId);\n                if (isBookInLocalStorage) {\n                    // If the book is in localStorage, remove it and change the button text\n                    (0, $lthku.removeFromLocalStorage)(bookId);\n                    button.textContent = \"Add to shopping list\";\n                    // Remove the congratulatory message\n                    (0, $lthku.toggleCongratulatoryMessage)(false);\n                } else {\n                    // If the book is not in localStorage, add it and change the button text\n                    (0, $lthku.addToLocalStorage)(bookId);\n                    button.textContent = \"Remove from the shopping list\";\n                    // Add the congratulatory message\n                    (0, $lthku.toggleCongratulatoryMessage)(true);\n                }\n            });\n        });\n        else {\n            (0, $lthku.toggleCongratulatoryMessage)(false);\n            document.querySelector(\".auth-message\").style.display = \"block\";\n            addToShoppingListButtons.forEach(function(button) {\n                button.id = \"not-allowed\";\n            });\n        }\n    });\n};\n\n\n\n\n\nconst $85eae4831f286061$export$bf9992c3deac5c9e = async (bookId)=>{\n    // Open the modal window\n    (0, $d526d8dd8f743c2d$export$313c6d35f75fc0e)(true);\n    // Fetch book details using the provided bookId\n    const bookById = await (0, $dyvSB.fetchBooks)(`${bookId}`);\n    // Destructure book details\n    const { _id: _id, title: title, author: author, book_image: book_image, description: description, buy_links: buy_links } = bookById;\n    // Filter buy links to include only 'Amazon' and 'Apple Books'\n    const buyLinks = [\n        {\n            name: \"Amazon\",\n            imageUrl: new URL((parcelRequire(\"jaNa7\"))).href,\n            buyUrl: \"\"\n        },\n        {\n            name: \"Apple Books\",\n            imageUrl: new URL((parcelRequire(\"4g0bO\"))).href,\n            buyUrl: \"\"\n        }\n    ];\n    const filteredBuyLinks = buy_links.filter((link)=>buyLinks.some((store)=>store.name === link.name));\n    buyLinks.forEach((store)=>{\n        const link = filteredBuyLinks.find((filteredLink)=>filteredLink.name === store.name);\n        store.buyUrl = link ? link.url : \"\";\n    });\n    // Generate HTML markup for buy links\n    const buyLinksMarkup = buyLinks.map((store)=>`<a href=\"${store.buyUrl}\" target=\"_blank\"><img src=\"${store.imageUrl}\" alt=\"${store.name}\"></a>`).join(\"\");\n    const placeholderImageURL = new URL((parcelRequire(\"cGAW0\"))).href;\n    // Generate modal HTML markup\n    const markup = `\n    <div class=\"modal\">\n      <div class=\"modal__info\">\n        <div class=\"modal__cover\">\n        <img class=\"lazyload\" src=\"${placeholderImageURL}\" data-src=\"${book_image}\" alt=\"${title}\">\n        </div>\n        <div class=\"modal__details\">\n            <div class=\"modal__details-header\">\n              <p class=\"modal__details-title\">${title}</p>\n              <p class=\"modal__details-author\">${author}</p>\n            </div>\n            <p class=\"modal__details-description\">${description ? description : \"Sorry, the description for this book is not available.\"}</p>\n            <div class=\"modal__details-links\">${buyLinksMarkup}</div>\n        </div>\n      </div>\n    </div>\n    <button type = \"button\" class = \"modal-pop-up-btn button\" data-book-id = \"${_id}\">Add to shopping list</button>\n  `;\n    // Insert the modal markup into the modal container\n    (0, $d526d8dd8f743c2d$export$56c24f306bd986cf).innerHTML = markup;\n    (0, $15e9813ff9aa67e8$export$b88da0071e018418)();\n};\n\n\n\n\nconst $78be8f8dd4f11555$export$4dba50aa73299466 = async ()=>{\n    (0, $4adbe6aee592a725$export$adaf8a367aa41030)(\"topBooks\");\n    // Fetch top books from the API.\n    const topBooks = await (0, $dyvSB.fetchBooks)(\"top-books\");\n    const placeholderImageURL = new URL((parcelRequire(\"cGAW0\"))).href;\n    // Generate markup for each top book category.\n    const markup = topBooks.map((category)=>{\n        // Generate markup for each book within the category.\n        const booksMarkup = category.books.map(({ title: title, author: author, book_image: book_image, _id: _id })=>{\n            return `\n          <div class=\"books__book\" data-book-id=\"${_id}\">\n            <div class=\"books__book--cover\">\n              <img class=\"lazyload\" \n              data-sizes=\"auto\"\n              src=\"${placeholderImageURL}\"\n              data-src=\"${book_image}\"\n              alt=\"${title}\">\n              <div class=\"books__book--cover-overlay\">\n                <div class=\"books__book--cover-overlay-text\">Quick View</div>\n              </div>\n            </div>\n            <div class=\"books__book--title\">${title}</div>\n            <div class=\"books__book--author\">${author}</div>\n          </div>\n        `;\n        }).join(\"\");\n        // Combine category title, book markup, and \"See more\" button into a single category markup.\n        return `\n      <div class=\"books__category\">\n        <h2 class=\"books__category--title\">${category.list_name}</h2>\n        <div class=\"books__category--books\">\n          ${booksMarkup}\n        </div>\n        <button class=\"see-more-btn\" type=\"button\" name=\"See more\" data-category=\"${category.list_name}\">See more</button>\n      </div>\n    `;\n    }).join(\"\");\n    // Insert the generated markup into the top books container.\n    (0, $4adbe6aee592a725$export$c61ab8dbb8180937).innerHTML = `\n      <h1 class=\"books__heading\">Best Sellers <span class=\"books__heading--highlight\">Books</span></h1>\n      ${markup}`;\n    // Select all elements with the class 'books__category--books'\n    const bookContainers = document.querySelectorAll(\".books__category--books\");\n    const blocks = document.querySelectorAll(\".books__category\");\n    function checkBlocksVisibility() {\n        let windowHeight = window.innerHeight;\n        blocks.forEach((block)=>{\n            let blockPosition = block.getBoundingClientRect().top;\n            if (blockPosition < windowHeight + 400) {\n                block.style.transition = \"opacity 0.5s ease-in-out, transform 0.5s ease-in-out\";\n                block.style.opacity = \"1\";\n                block.style.transform = \"translateY(0)\";\n            } else {\n                block.style.transition = \"opacity 0.5s ease-in-out, transform 0.5s ease-in-out\";\n                block.style.opacity = \"0\";\n                block.style.transform = \"translateY(100%)\";\n            }\n        });\n    }\n    checkBlocksVisibility();\n    window.addEventListener(\"scroll\", function() {\n        checkBlocksVisibility();\n    });\n    // Iterate over each book container\n    bookContainers.forEach((bookContainer)=>{\n        // Add event listener for click events on books inside the current container\n        bookContainer.addEventListener(\"click\", (event)=>{\n            const targetBook = event.target.closest(\".books__book\");\n            if (targetBook) {\n                const bookId = targetBook.dataset.bookId;\n                console.log(\"Displaying book with ID:\", bookId);\n                (0, $85eae4831f286061$export$bf9992c3deac5c9e)(bookId);\n            }\n        });\n    });\n};\n// Call the displayTopBooks function to render top books in the UI.\n$78be8f8dd4f11555$export$4dba50aa73299466();\n\n\n\nvar $dyvSB = parcelRequire(\"dyvSB\");\n\n\n\n\nconst $17979ab0892cba75$var$displayBooksByCategory = async (categoryName)=>{\n    const booksByCategory = await (0, $dyvSB.fetchBooks)(\"category\", categoryName);\n    if (!booksByCategory || !Array.isArray(booksByCategory)) {\n        console.error(\"Invalid response from fetchBooks:\", booksByCategory);\n        return;\n    }\n    (0, $4adbe6aee592a725$export$adaf8a367aa41030)(\"category\");\n    const placeholderImageURL = new URL((parcelRequire(\"cGAW0\"))).href;\n    const booksMarkup = booksByCategory.flat().map((book)=>{\n        return `\n      <div class=\"books__book\" data-book-id=\"${book._id}\">\n        <div class=\"books__book--cover\">\n          <img class=\"lazyload\" \n          src=\"${placeholderImageURL}\"\n          data-src=\"${book.book_image}\"\n          alt=\"${book.title}\">\n          <div class=\"books__book--cover-overlay\">\n            <div class=\"books__book--cover-overlay-text\">Quick View</div>\n          </div>\n        </div>\n        <div class=\"books__book--title\">${book.title}</div>\n        <div class=\"books__book--author\">${book.author}</div>\n      </div>\n      `;\n    }).join(\"\");\n    const categoryTitleMarkup = `\n    <div class=\"books-category visible\" data-category=\"${categoryName}\">\n      <h2 class=\"books__heading\">${categoryName}</h2>\n      <div class=\"books__category--books\">\n        ${booksMarkup}\n      </div>\n    </div>\n  `;\n    (0, $4adbe6aee592a725$export$278e8a5cfb9675fd).innerHTML = categoryTitleMarkup;\n    const books = document.querySelectorAll(\".books__book\");\n    books.forEach((book)=>{\n        book.addEventListener(\"click\", ()=>{\n            const bookId = book.dataset.bookId;\n            console.log(\"Displaying book with ID:\", bookId);\n            (0, $85eae4831f286061$export$bf9992c3deac5c9e)(bookId);\n        });\n    });\n};\nconst $17979ab0892cba75$var$scrollToCategory = ()=>{\n    if (0, $4adbe6aee592a725$export$278e8a5cfb9675fd) (0, $4adbe6aee592a725$export$278e8a5cfb9675fd).scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n    });\n    else console.error(\"Books not found.\");\n};\n(0, $4adbe6aee592a725$export$c61ab8dbb8180937).addEventListener(\"click\", (event)=>{\n    const seeMoreBtn = event.target.closest('button[name=\"See more\"]');\n    if (seeMoreBtn) {\n        const categoryName = seeMoreBtn.getAttribute(\"data-category\");\n        $17979ab0892cba75$var$displayBooksByCategory(categoryName);\n        const categoryListButtons = document.querySelectorAll(\".category-list button[name]\");\n        categoryListButtons.forEach((button)=>{\n            button.classList.remove(\"active\");\n            if (button.getAttribute(\"name\") === categoryName) {\n                button.classList.add(\"active\");\n                button.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"center\"\n                });\n            }\n        });\n        $17979ab0892cba75$var$scrollToCategory();\n    }\n});\nconst $17979ab0892cba75$var$categoryListContainer = document.querySelector(\".category-list\");\n$17979ab0892cba75$var$categoryListContainer.addEventListener(\"click\", (event)=>{\n    const targetButton = event.target.closest(\"button[name]\");\n    if (targetButton) {\n        const allButtons = document.querySelectorAll(\"button[name]\");\n        allButtons.forEach((button)=>button.classList.remove(\"active\"));\n        targetButton.classList.add(\"active\");\n        const categoryName = targetButton.getAttribute(\"name\");\n        if (categoryName === \"All categories\") (0, $78be8f8dd4f11555$export$4dba50aa73299466)();\n        else {\n            $17979ab0892cba75$var$displayBooksByCategory(categoryName);\n            $17979ab0892cba75$var$scrollToCategory();\n        }\n    }\n});\n\n\n\n\n\n//# sourceMappingURL=index.e040486e.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","module.exports = new __parcel__URL__(\"amazon.702e28b6.png\").toString();","module.exports = new __parcel__URL__(\"apple-books.75f7682c.png\").toString();","module.exports = new __parcel__URL__(\"placeholder.18062ded.jpg\").toString();","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"lbZNw\\\",\\\"index.e040486e.js\\\",\\\"9zlPt\\\",\\\"placeholder.18062ded.jpg\\\",\\\"i6YUf\\\",\\\"amazon.702e28b6.png\\\",\\\"jHlqi\\\",\\\"apple-books.75f7682c.png\\\",\\\"5TVzx\\\",\\\"shopping-list.a19dbaa9.js\\\",\\\"8BfbS\\\",\\\"shopping-list.runtime.0c78f469.js\\\"]\"));","import './bookAPI.js';\nimport './viewSwitcher.js';\nimport './fetchCategories.js';\nimport './fetchBooks.js';\nimport './fetchBooksByCategories.js';\nimport './fetchBookById.js';\n","export const topBooksContainer = document.querySelector('[data-content=\"top-books\"]');\nexport const booksContainer = document.querySelector('[data-content=\"category\"]');\n\nexport const switchView = view => {\n  if (view === 'topBooks') {\n    topBooksContainer.classList.add('visible');\n    topBooksContainer.classList.remove('right', 'hidden');\n    booksContainer.classList.remove('visible');\n    booksContainer.classList.add('left', 'hidden');\n  } else if (view === 'category') {\n    booksContainer.classList.add('visible');\n    booksContainer.classList.remove('left', 'hidden');\n    topBooksContainer.classList.remove('visible');\n    topBooksContainer.classList.add('right', 'hidden');\n  }\n};\n","import { fetchBooks } from './bookAPI.js';\n\n/**\n * Displays book categories in the specified HTML container.\n * Fetches book categories using the fetchBooks function and updates the DOM accordingly.\n *\n * @returns {void}\n */\nconst displayCategories = async () => {\n  // Select the HTML container for categories.\n  const categoriesContainer = document.querySelector('.category-list');\n\n  // Fetch book categories from the API.\n  const bookCategories = await fetchBooks('category-list');\n\n  // Sorting categories alphabetically.\n  bookCategories.sort((a, b) => a.list_name.localeCompare(b.list_name));\n\n  // Create initial markup for \"All categories\" button.\n  let markup = `<div>\n          <button class=\"category-list__item active\" type=\"button\" name=\"All categories\">All categories</button>\n        </div>`;\n\n  // Append markup for each book category obtained from the API.\n  markup += bookCategories\n    .map(({ list_name }) => {\n      return `<div>\n            <button class=\"category-list__item\" type=\"button\" name=\"${list_name}\">${list_name}</button>\n        </div>`;\n    })\n    .join('');\n\n  // Insert the generated markup into the categories container.\n  categoriesContainer.insertAdjacentHTML('beforeend', markup);\n};\n\n// Call the displayCategories function to render book categories in the UI.\ndisplayCategories();\n","import { fetchBooks } from './bookAPI.js';\nimport { displayBookById } from './fetchBookById.js';\nimport { topBooksContainer, switchView } from './viewSwitcher.js';\n\n/**\n * Displays top books in the specified HTML container.\n * Fetches top books using the fetchBooks function and updates the DOM accordingly.\n *\n * @returns {void}\n */\nexport const displayTopBooks = async () => {\n  switchView('topBooks');\n\n  // Fetch top books from the API.\n  const topBooks = await fetchBooks('top-books');\n\n  const placeholderImageURL = new URL('/src/images/placeholder.jpg', import.meta.url).href;\n\n  // Generate markup for each top book category.\n  const markup = topBooks\n    .map(category => {\n      // Generate markup for each book within the category.\n      const booksMarkup = category.books\n        .map(({ title, author, book_image, _id }) => {\n          return `\n          <div class=\"books__book\" data-book-id=\"${_id}\">\n            <div class=\"books__book--cover\">\n              <img class=\"lazyload\" \n              data-sizes=\"auto\"\n              src=\"${placeholderImageURL}\"\n              data-src=\"${book_image}\"\n              alt=\"${title}\">\n              <div class=\"books__book--cover-overlay\">\n                <div class=\"books__book--cover-overlay-text\">Quick View</div>\n              </div>\n            </div>\n            <div class=\"books__book--title\">${title}</div>\n            <div class=\"books__book--author\">${author}</div>\n          </div>\n        `;\n        })\n        .join('');\n\n      // Combine category title, book markup, and \"See more\" button into a single category markup.\n      return `\n      <div class=\"books__category\">\n        <h2 class=\"books__category--title\">${category.list_name}</h2>\n        <div class=\"books__category--books\">\n          ${booksMarkup}\n        </div>\n        <button class=\"see-more-btn\" type=\"button\" name=\"See more\" data-category=\"${category.list_name}\">See more</button>\n      </div>\n    `;\n    })\n    .join('');\n\n  // Insert the generated markup into the top books container.\n  topBooksContainer.innerHTML = `\n      <h1 class=\"books__heading\">Best Sellers <span class=\"books__heading--highlight\">Books</span></h1>\n      ${markup}`;\n\n  // Select all elements with the class 'books__category--books'\n  const bookContainers = document.querySelectorAll('.books__category--books');\n\n  const blocks = document.querySelectorAll('.books__category');\n\n  function checkBlocksVisibility() {\n    let windowHeight = window.innerHeight;\n\n    blocks.forEach(block => {\n      let blockPosition = block.getBoundingClientRect().top;\n\n      if (blockPosition < windowHeight + 400) {\n        block.style.transition = 'opacity 0.5s ease-in-out, transform 0.5s ease-in-out';\n        block.style.opacity = '1';\n        block.style.transform = 'translateY(0)';\n      } else {\n        block.style.transition = 'opacity 0.5s ease-in-out, transform 0.5s ease-in-out';\n        block.style.opacity = '0';\n        block.style.transform = 'translateY(100%)';\n      }\n    });\n  }\n\n  checkBlocksVisibility();\n\n  window.addEventListener('scroll', function () {\n    checkBlocksVisibility();\n  });\n\n  // Iterate over each book container\n  bookContainers.forEach(bookContainer => {\n    // Add event listener for click events on books inside the current container\n    bookContainer.addEventListener('click', event => {\n      const targetBook = event.target.closest('.books__book');\n\n      if (targetBook) {\n        const bookId = targetBook.dataset.bookId;\n\n        console.log('Displaying book with ID:', bookId);\n        displayBookById(bookId);\n      }\n    });\n  });\n};\n\n// Call the displayTopBooks function to render top books in the UI.\ndisplayTopBooks();\n","import { fetchBooks } from './bookAPI.js';\nimport { modalContainer, toggleModal } from './modalHandler.js';\nimport { bookAddButtonHandler } from './handleBookAddition.js';\n\n/**\n * Display book details by ID in a modal pop-up.\n * @param {string} bookId - The ID of the book to display.\n * @returns {void}\n */\nexport const displayBookById = async bookId => {\n  // Open the modal window\n  toggleModal(true);\n\n  // Fetch book details using the provided bookId\n  const bookById = await fetchBooks(`${bookId}`);\n\n  // Destructure book details\n  const { _id, title, author, book_image, description, buy_links } = bookById;\n\n  // Filter buy links to include only 'Amazon' and 'Apple Books'\n  const buyLinks = [\n    {\n      name: 'Amazon',\n      imageUrl: new URL('/src/images/amazon.png', import.meta.url).href,\n      buyUrl: '',\n    },\n    {\n      name: 'Apple Books',\n      imageUrl: new URL('/src/images/apple-books.png', import.meta.url).href,\n      buyUrl: '',\n    },\n  ];\n\n  const filteredBuyLinks = buy_links.filter(link =>\n    buyLinks.some(store => store.name === link.name),\n  );\n\n  buyLinks.forEach(store => {\n    const link = filteredBuyLinks.find(filteredLink => filteredLink.name === store.name);\n    store.buyUrl = link ? link.url : '';\n  });\n\n  // Generate HTML markup for buy links\n  const buyLinksMarkup = buyLinks\n    .map(\n      store =>\n        `<a href=\"${store.buyUrl}\" target=\"_blank\"><img src=\"${store.imageUrl}\" alt=\"${store.name}\"></a>`,\n    )\n    .join('');\n\n  const placeholderImageURL = new URL('/src/images/placeholder.jpg', import.meta.url).href;\n\n  // Generate modal HTML markup\n  const markup = `\n    <div class=\"modal\">\n      <div class=\"modal__info\">\n        <div class=\"modal__cover\">\n        <img class=\"lazyload\" src=\"${placeholderImageURL}\" data-src=\"${book_image}\" alt=\"${title}\">\n        </div>\n        <div class=\"modal__details\">\n            <div class=\"modal__details-header\">\n              <p class=\"modal__details-title\">${title}</p>\n              <p class=\"modal__details-author\">${author}</p>\n            </div>\n            <p class=\"modal__details-description\">${\n              description ? description : 'Sorry, the description for this book is not available.'\n            }</p>\n            <div class=\"modal__details-links\">${buyLinksMarkup}</div>\n        </div>\n      </div>\n    </div>\n    <button type = \"button\" class = \"modal-pop-up-btn button\" data-book-id = \"${_id}\">Add to shopping list</button>\n  `;\n\n  // Insert the modal markup into the modal container\n  modalContainer.innerHTML = markup;\n\n  bookAddButtonHandler();\n};\n","/**\n * Element DOM reprezentujący kontener na treść wewnątrz wyskakującego okna modalnego.\n * @type {HTMLElement}\n */\nexport const modalContainer = document.querySelector('.modal-pop-up-content');\n\n/**\n * Funkcja do przełączania widoczności wyskakującego okna modalnego.\n * @param {boolean} showModal - Jeśli wartość to true, pokaż okno modalne; jeśli false, ukryj okno modalne.\n */\nexport const toggleModal = showModal => {\n  /**\n   * Element DOM reprezentujący tło wyskakującego okna modalnego.\n   * @type {HTMLElement}\n   */\n  const backdrop = document.querySelector('.backdrop-pop-up');\n\n  if (showModal) {\n    // Pokaż okno modalne, usuwając klasę 'is-hidden' z tła\n    backdrop.classList.remove('is-hidden');\n  } else {\n    // Ukryj okno modalne, dodając klasę 'is-hidden' do tła\n    backdrop.classList.add('is-hidden');\n  }\n};\n\n/**\n * Element DOM reprezentujący tło wyskakującego okna modalnego.\n * @type {HTMLElement}\n */\nconst backdrop = document.querySelector('.backdrop-pop-up');\n\n/**\n * Słuchacz zdarzeń dla kliknięcia na tło modala. Zamyka modal.\n */\nbackdrop.addEventListener('click', function (event) {\n  // Sprawdź czy kliknięcie nastąpiło w backdrop (nie w jego dzieci)\n  if (event.target === backdrop) {\n    // Zamykaj modal tylko jeśli kliknięcie nastąpiło bezpośrednio w backdrop\n    toggleModal(false);\n  }\n});\n\n/**\n * Element DOM reprezentujący przycisk zamykający wewnątrz modala.\n * @type {HTMLElement}\n */\nconst closeButton = document.querySelector('.close-modal-button');\n\n/**\n * Słuchacz zdarzeń dla kliknięcia na przycisk zamykający. Czyści zawartość modala i ukrywa go.\n */\ncloseButton.addEventListener('click', function () {\n  // Wyczyść zawartość wewnątrz kontenera modala\n  modalContainer.innerHTML = '';\n\n  // Ukryj modal\n  toggleModal(false);\n});\n//zamknięcie za pomocą klawiszy\n\ndocument.addEventListener('keydown', function (event) {\n  if (event.key === 'Escape') {\n    toggleModal(false);\n  }\n});\n","import {\n  addToLocalStorage,\n  removeFromLocalStorage,\n  checkIfBookInLocalStorage,\n  toggleCongratulatoryMessage,\n} from './localStorage.js';\n\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from './auth/firebase';\n\nexport const bookAddButtonHandler = () => {\n  // Adding event handling for the \"Add to Shopping List\" buttons\n  const addToShoppingListButtons = document.querySelectorAll('.modal-pop-up-btn');\n\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      addToShoppingListButtons.forEach(function (button) {\n        const bookId = button.getAttribute('data-book-id');\n\n        // Checking if the book is already in localStorage\n        const isBookInLocalStorage = checkIfBookInLocalStorage(bookId);\n\n        if (isBookInLocalStorage) {\n          // If the book is in localStorage, change the button text\n          button.textContent = 'Remove from the shopping list';\n          // Add the congratulatory message\n          toggleCongratulatoryMessage(true);\n        } else {\n          // If the book is not in localStorage, add it and change the button text\n          toggleCongratulatoryMessage(false);\n        }\n\n        // Adding click event listener with  function\n        button.addEventListener('click', function () {\n          // Checking if the book is already in localStorage\n          const isBookInLocalStorage = checkIfBookInLocalStorage(bookId);\n\n          if (isBookInLocalStorage) {\n            // If the book is in localStorage, remove it and change the button text\n            removeFromLocalStorage(bookId);\n            button.textContent = 'Add to shopping list';\n            // Remove the congratulatory message\n            toggleCongratulatoryMessage(false);\n          } else {\n            // If the book is not in localStorage, add it and change the button text\n            addToLocalStorage(bookId);\n            button.textContent = 'Remove from the shopping list';\n            // Add the congratulatory message\n            toggleCongratulatoryMessage(true);\n          }\n        });\n      });\n    } else {\n      toggleCongratulatoryMessage(false);\n\n      document.querySelector('.auth-message').style.display = 'block';\n\n      addToShoppingListButtons.forEach(function (button) {\n        button.id = 'not-allowed';\n      });\n    }\n  });\n};\n","import { fetchBooks } from './bookAPI.js';\nimport { displayTopBooks } from './fetchBooks.js';\nimport { displayBookById } from './fetchBookById.js';\nimport { topBooksContainer, booksContainer, switchView } from './viewSwitcher.js';\n\nconst displayBooksByCategory = async categoryName => {\n  const booksByCategory = await fetchBooks('category', categoryName);\n\n  if (!booksByCategory || !Array.isArray(booksByCategory)) {\n    console.error('Invalid response from fetchBooks:', booksByCategory);\n    return;\n  }\n\n  switchView('category');\n\n  const placeholderImageURL = new URL('/src/images/placeholder.jpg', import.meta.url).href;\n\n  const booksMarkup = booksByCategory\n    .flat()\n    .map(book => {\n      return `\n      <div class=\"books__book\" data-book-id=\"${book._id}\">\n        <div class=\"books__book--cover\">\n          <img class=\"lazyload\" \n          src=\"${placeholderImageURL}\"\n          data-src=\"${book.book_image}\"\n          alt=\"${book.title}\">\n          <div class=\"books__book--cover-overlay\">\n            <div class=\"books__book--cover-overlay-text\">Quick View</div>\n          </div>\n        </div>\n        <div class=\"books__book--title\">${book.title}</div>\n        <div class=\"books__book--author\">${book.author}</div>\n      </div>\n      `;\n    })\n    .join('');\n\n  const categoryTitleMarkup = `\n    <div class=\"books-category visible\" data-category=\"${categoryName}\">\n      <h2 class=\"books__heading\">${categoryName}</h2>\n      <div class=\"books__category--books\">\n        ${booksMarkup}\n      </div>\n    </div>\n  `;\n\n  booksContainer.innerHTML = categoryTitleMarkup;\n\n  const books = document.querySelectorAll('.books__book');\n\n  books.forEach(book => {\n    book.addEventListener('click', () => {\n      const bookId = book.dataset.bookId;\n      console.log('Displaying book with ID:', bookId);\n      displayBookById(bookId);\n    });\n  });\n};\n\nconst scrollToCategory = () => {\n  if (booksContainer) {\n    booksContainer.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start',\n    });\n  } else {\n    console.error('Books not found.');\n  }\n};\n\ntopBooksContainer.addEventListener('click', event => {\n  const seeMoreBtn = event.target.closest('button[name=\"See more\"]');\n\n  if (seeMoreBtn) {\n    const categoryName = seeMoreBtn.getAttribute('data-category');\n    displayBooksByCategory(categoryName);\n\n    const categoryListButtons = document.querySelectorAll('.category-list button[name]');\n    categoryListButtons.forEach(button => {\n      button.classList.remove('active');\n      if (button.getAttribute('name') === categoryName) {\n        button.classList.add('active');\n\n        button.scrollIntoView({\n          behavior: 'smooth',\n          block: 'center',\n        });\n      }\n    });\n\n    scrollToCategory();\n  }\n});\n\nconst categoryListContainer = document.querySelector('.category-list');\n\ncategoryListContainer.addEventListener('click', event => {\n  const targetButton = event.target.closest('button[name]');\n\n  if (targetButton) {\n    const allButtons = document.querySelectorAll('button[name]');\n    allButtons.forEach(button => button.classList.remove('active'));\n\n    targetButton.classList.add('active');\n\n    const categoryName = targetButton.getAttribute('name');\n\n    if (categoryName === 'All categories') {\n      displayTopBooks();\n    } else {\n      displayBooksByCategory(categoryName);\n      scrollToCategory();\n    }\n  }\n});\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$d49cb2d7b03f6a77$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$d49cb2d7b03f6a77$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$4adbe6aee592a725$export$c61ab8dbb8180937","document","querySelector","$4adbe6aee592a725$export$278e8a5cfb9675fd","$4adbe6aee592a725$export$adaf8a367aa41030","view","classList","add","remove","$dyvSB","$77d713492c37f0bb$var$displayCategories","categoriesContainer","bookCategories","fetchBooks","sort","a","b","list_name","localeCompare","markup","map","join","insertAdjacentHTML","$d526d8dd8f743c2d$export$56c24f306bd986cf","$d526d8dd8f743c2d$export$313c6d35f75fc0e","showModal","backdrop","$d526d8dd8f743c2d$var$backdrop","addEventListener","event","target","$d526d8dd8f743c2d$var$closeButton","innerHTML","key","$lthku","$46SdE","$gwo96","$15e9813ff9aa67e8$export$b88da0071e018418","addToShoppingListButtons","querySelectorAll","onAuthStateChanged","auth","user","forEach","button","bookId","getAttribute","checkIfBookInLocalStorage","textContent","toggleCongratulatoryMessage","removeFromLocalStorage","addToLocalStorage","style","display","$85eae4831f286061$export$bf9992c3deac5c9e","_id","title","author","book_image","description","buy_links","buyLinks","name","imageUrl","href","buyUrl","filteredBuyLinks","filter","link","some","store","find","filteredLink","buyLinksMarkup","placeholderImageURL","$78be8f8dd4f11555$export$4dba50aa73299466","topBooks","category","booksMarkup","books","bookContainers","blocks","checkBlocksVisibility","windowHeight","window","innerHeight","block","blockPosition","getBoundingClientRect","top","transition","opacity","transform","bookContainer","targetBook","closest","dataset","console","log","$17979ab0892cba75$var$displayBooksByCategory","categoryName","booksByCategory","Array","isArray","error","flat","book","categoryTitleMarkup","$17979ab0892cba75$var$scrollToCategory","scrollIntoView","behavior","seeMoreBtn","categoryListButtons","$17979ab0892cba75$var$categoryListContainer","targetButton","allButtons"],"version":3,"file":"index.e040486e.js.map"}